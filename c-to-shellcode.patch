diff --git a/c-to-shellcode.py b/c-to-shellcode.py
index 8662a36..8267963 100644
--- a/c-to-shellcode.py
+++ b/c-to-shellcode.py
@@ -21,20 +21,30 @@ def run_cmd(cmd: str):
 LOADER_PAYLOAD_STR = ":PAYLOAD:"
 
 CC = "x86_64-w64-mingw32-gcc-win32"
-EXE_PAYLOAD_CFLAGS = args(["-fPIC", "-mconsole", "-Os", "-e start", "-nostartfiles"])
-BIN_PAYLOAD_CFLAGS = args(
-    [
-        "-Os",
-        "-fPIC",
-        "-nostdlib",
-        "-nostartfiles",
-        "-ffreestanding",
-        "-fno-asynchronous-unwind-tables",
-        "-fno-ident",
-        "-e start",
-        "-s",
-    ]
-)
+EXE_PAYLOAD_CFLAGS = args([
+    "-fPIC",
+    "-mconsole",
+    "-Os",
+    "-DENABLE_DEBUG",
+    "-Werror",
+    "-Wall",
+    "-Wextra",
+    "-Wformat",
+])
+BIN_PAYLOAD_CFLAGS = args([
+    "-Os",
+    "-fPIC",
+    "-nostdlib",
+    "-nostartfiles",
+    "-ffreestanding",
+    "-fno-asynchronous-unwind-tables",
+    "-fno-ident",
+    "-e start",
+    "-s",
+    "-Werror",
+    "-Wall",
+    "-Wextra",
+])
 
 if __name__ == "__main__":
     input_file = Path(sys.argv[1]).absolute()
@@ -51,12 +61,12 @@ if __name__ == "__main__":
     run_cmd(f"{CC} -c {input_file} -o {output_file_o} {BIN_PAYLOAD_CFLAGS}")
 
     # Produce flat binary with payload
-    run_cmd(
-        f"ld -T assets/linker.ld {output_file_o} -o {output_file_bin}"
-    )
+    run_cmd(f"ld -T assets/linker.ld {output_file_o} -o {output_file_bin}")
 
     # Produce PE .exe with payload (WinAPI included)
-    run_cmd(f"{CC} {output_file_o} -o {output_file_exe} {EXE_PAYLOAD_CFLAGS}")
+    # run_cmd(f"{CC} -c {input_file} -o {output_file_o} {EXE_PAYLOAD_CFLAGS} -DENABLE_LOG_DEBUG")
+    # run_cmd(f"{CC} {output_file_o} -o {output_file_exe} {EXE_PAYLOAD_CFLAGS}")
+    run_cmd(f"{CC} {input_file} -o {output_file_exe} {EXE_PAYLOAD_CFLAGS}")
 
     # Convert flat binary into C array of bytes
     with open(output_file_bin, "rb") as f:
